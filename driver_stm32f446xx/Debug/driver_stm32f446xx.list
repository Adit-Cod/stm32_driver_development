
driver_stm32f446xx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004fc  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006c0  080006c8  000106c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006c0  080006c0  000106c8  2**0
                  CONTENTS
  4 .ARM          00000000  080006c0  080006c0  000106c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006c0  080006c8  000106c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006c0  080006c0  000106c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006c4  080006c4  000106c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000000  080006c8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080006c8  00020024  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000106c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001aa2  00000000  00000000  000106f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000496  00000000  00000000  00012194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000d8  00000000  00000000  00012630  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00012708  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000026c2  00000000  00000000  000127a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013ec  00000000  00000000  00014e6a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000095a6  00000000  00000000  00016256  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001f7fc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000274  00000000  00000000  0001f850  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080006a8 	.word	0x080006a8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080006a8 	.word	0x080006a8

08000204 <GPIO_Init>:
 *     \post
 *
 *     \warning
 *//*------------------------------------------------------------------------*/
void GPIO_Init(GPIO_Handle_t *pGPIOx)
{
 8000204:	b490      	push	{r4, r7}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]

	/* Configure the Given Pin as per Requested structure */
	static uint32_t gpio_temphandler;
	/* Set the MODER Register */
	if( pGPIOx->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800020c:	687b      	ldr	r3, [r7, #4]
 800020e:	795b      	ldrb	r3, [r3, #5]
 8000210:	2b03      	cmp	r3, #3
 8000212:	d821      	bhi.n	8000258 <GPIO_Init+0x54>
	{
		gpio_temphandler = (pGPIOx->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOx->GPIO_PinConfig.GPIO_PinNumber));
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	795b      	ldrb	r3, [r3, #5]
 8000218:	461a      	mov	r2, r3
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	791b      	ldrb	r3, [r3, #4]
 800021e:	005b      	lsls	r3, r3, #1
 8000220:	fa02 f303 	lsl.w	r3, r2, r3
 8000224:	461a      	mov	r2, r3
 8000226:	4b5c      	ldr	r3, [pc, #368]	; (8000398 <GPIO_Init+0x194>)
 8000228:	601a      	str	r2, [r3, #0]
		pGPIOx->pGPIOx->MODER &= ~(0x3 << pGPIOx->GPIO_PinConfig.GPIO_PinNumber);
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	681a      	ldr	r2, [r3, #0]
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	791b      	ldrb	r3, [r3, #4]
 8000234:	4619      	mov	r1, r3
 8000236:	2303      	movs	r3, #3
 8000238:	408b      	lsls	r3, r1
 800023a:	43db      	mvns	r3, r3
 800023c:	4619      	mov	r1, r3
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	400a      	ands	r2, r1
 8000244:	601a      	str	r2, [r3, #0]
		pGPIOx->pGPIOx->MODER |= gpio_temphandler;
 8000246:	687b      	ldr	r3, [r7, #4]
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	6819      	ldr	r1, [r3, #0]
 800024c:	4b52      	ldr	r3, [pc, #328]	; (8000398 <GPIO_Init+0x194>)
 800024e:	681a      	ldr	r2, [r3, #0]
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	430a      	orrs	r2, r1
 8000256:	601a      	str	r2, [r3, #0]
	{
		/* Interrupt Handling */
	}

	/* Set the Output Type Register */
	gpio_temphandler = RESET;
 8000258:	4b4f      	ldr	r3, [pc, #316]	; (8000398 <GPIO_Init+0x194>)
 800025a:	2200      	movs	r2, #0
 800025c:	601a      	str	r2, [r3, #0]
	gpio_temphandler = (pGPIOx->GPIO_PinConfig.GPIO_PinOPType << (pGPIOx->GPIO_PinConfig.GPIO_PinNumber));
 800025e:	687b      	ldr	r3, [r7, #4]
 8000260:	7a1b      	ldrb	r3, [r3, #8]
 8000262:	461a      	mov	r2, r3
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	791b      	ldrb	r3, [r3, #4]
 8000268:	fa02 f303 	lsl.w	r3, r2, r3
 800026c:	461a      	mov	r2, r3
 800026e:	4b4a      	ldr	r3, [pc, #296]	; (8000398 <GPIO_Init+0x194>)
 8000270:	601a      	str	r2, [r3, #0]
	pGPIOx->pGPIOx->OTYPER &= ~(0x1 << pGPIOx->GPIO_PinConfig.GPIO_PinNumber);
 8000272:	687b      	ldr	r3, [r7, #4]
 8000274:	681b      	ldr	r3, [r3, #0]
 8000276:	685a      	ldr	r2, [r3, #4]
 8000278:	687b      	ldr	r3, [r7, #4]
 800027a:	791b      	ldrb	r3, [r3, #4]
 800027c:	4619      	mov	r1, r3
 800027e:	2301      	movs	r3, #1
 8000280:	408b      	lsls	r3, r1
 8000282:	43db      	mvns	r3, r3
 8000284:	4619      	mov	r1, r3
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	400a      	ands	r2, r1
 800028c:	605a      	str	r2, [r3, #4]
	pGPIOx->pGPIOx->OTYPER |= gpio_temphandler;
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	6859      	ldr	r1, [r3, #4]
 8000294:	4b40      	ldr	r3, [pc, #256]	; (8000398 <GPIO_Init+0x194>)
 8000296:	681a      	ldr	r2, [r3, #0]
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	430a      	orrs	r2, r1
 800029e:	605a      	str	r2, [r3, #4]

	/* Set the Output Speed */
	gpio_temphandler = RESET;
 80002a0:	4b3d      	ldr	r3, [pc, #244]	; (8000398 <GPIO_Init+0x194>)
 80002a2:	2200      	movs	r2, #0
 80002a4:	601a      	str	r2, [r3, #0]
	gpio_temphandler = (pGPIOx->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOx->GPIO_PinConfig.GPIO_PinNumber));
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	799b      	ldrb	r3, [r3, #6]
 80002aa:	461a      	mov	r2, r3
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	791b      	ldrb	r3, [r3, #4]
 80002b0:	005b      	lsls	r3, r3, #1
 80002b2:	fa02 f303 	lsl.w	r3, r2, r3
 80002b6:	461a      	mov	r2, r3
 80002b8:	4b37      	ldr	r3, [pc, #220]	; (8000398 <GPIO_Init+0x194>)
 80002ba:	601a      	str	r2, [r3, #0]
	pGPIOx->pGPIOx->OSPEEDER &= ~(0x3 << pGPIOx->GPIO_PinConfig.GPIO_PinNumber);
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	689a      	ldr	r2, [r3, #8]
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	791b      	ldrb	r3, [r3, #4]
 80002c6:	4619      	mov	r1, r3
 80002c8:	2303      	movs	r3, #3
 80002ca:	408b      	lsls	r3, r1
 80002cc:	43db      	mvns	r3, r3
 80002ce:	4619      	mov	r1, r3
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	400a      	ands	r2, r1
 80002d6:	609a      	str	r2, [r3, #8]
	pGPIOx->pGPIOx->OSPEEDER |= gpio_temphandler;
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	6899      	ldr	r1, [r3, #8]
 80002de:	4b2e      	ldr	r3, [pc, #184]	; (8000398 <GPIO_Init+0x194>)
 80002e0:	681a      	ldr	r2, [r3, #0]
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	430a      	orrs	r2, r1
 80002e8:	609a      	str	r2, [r3, #8]

	/* Set the Pull-Up Pull-Down Configuration */

	gpio_temphandler = RESET;
 80002ea:	4b2b      	ldr	r3, [pc, #172]	; (8000398 <GPIO_Init+0x194>)
 80002ec:	2200      	movs	r2, #0
 80002ee:	601a      	str	r2, [r3, #0]
	gpio_temphandler = (pGPIOx->GPIO_PinConfig.PIO_PinPUPDControl << (2*pGPIOx->GPIO_PinConfig.GPIO_PinNumber));
 80002f0:	687b      	ldr	r3, [r7, #4]
 80002f2:	79db      	ldrb	r3, [r3, #7]
 80002f4:	461a      	mov	r2, r3
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	791b      	ldrb	r3, [r3, #4]
 80002fa:	005b      	lsls	r3, r3, #1
 80002fc:	fa02 f303 	lsl.w	r3, r2, r3
 8000300:	461a      	mov	r2, r3
 8000302:	4b25      	ldr	r3, [pc, #148]	; (8000398 <GPIO_Init+0x194>)
 8000304:	601a      	str	r2, [r3, #0]
	pGPIOx->pGPIOx->PUPDR &= ~(0x3 << pGPIOx->GPIO_PinConfig.GPIO_PinNumber);
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	68da      	ldr	r2, [r3, #12]
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	791b      	ldrb	r3, [r3, #4]
 8000310:	4619      	mov	r1, r3
 8000312:	2303      	movs	r3, #3
 8000314:	408b      	lsls	r3, r1
 8000316:	43db      	mvns	r3, r3
 8000318:	4619      	mov	r1, r3
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	400a      	ands	r2, r1
 8000320:	60da      	str	r2, [r3, #12]
	pGPIOx->pGPIOx->PUPDR |= gpio_temphandler;
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	68d9      	ldr	r1, [r3, #12]
 8000328:	4b1b      	ldr	r3, [pc, #108]	; (8000398 <GPIO_Init+0x194>)
 800032a:	681a      	ldr	r2, [r3, #0]
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	681b      	ldr	r3, [r3, #0]
 8000330:	430a      	orrs	r2, r1
 8000332:	60da      	str	r2, [r3, #12]

	if(GPIO_MODE_AF == pGPIOx->GPIO_PinConfig.GPIO_PinMode)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	795b      	ldrb	r3, [r3, #5]
 8000338:	2b02      	cmp	r3, #2
 800033a:	d127      	bne.n	800038c <GPIO_Init+0x188>
	{
	   /* Configure Alternate Functionality */
		static uint8_t gpio_AfTemp_handlel,gpio_AfTemp_handleh;
		gpio_AfTemp_handlel = pGPIOx->GPIO_PinConfig.GPIO_PinNumber/8;
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	791b      	ldrb	r3, [r3, #4]
 8000340:	08db      	lsrs	r3, r3, #3
 8000342:	b2da      	uxtb	r2, r3
 8000344:	4b15      	ldr	r3, [pc, #84]	; (800039c <GPIO_Init+0x198>)
 8000346:	701a      	strb	r2, [r3, #0]
		gpio_AfTemp_handleh = pGPIOx->GPIO_PinConfig.GPIO_PinNumber%8;
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	791b      	ldrb	r3, [r3, #4]
 800034c:	f003 0307 	and.w	r3, r3, #7
 8000350:	b2da      	uxtb	r2, r3
 8000352:	4b13      	ldr	r3, [pc, #76]	; (80003a0 <GPIO_Init+0x19c>)
 8000354:	701a      	strb	r2, [r3, #0]

		pGPIOx->pGPIOx->AFR[gpio_AfTemp_handlel] |= (pGPIOx->GPIO_PinConfig.GPIO_PinAltFunMode << (4*gpio_AfTemp_handleh));
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	4a10      	ldr	r2, [pc, #64]	; (800039c <GPIO_Init+0x198>)
 800035c:	7812      	ldrb	r2, [r2, #0]
 800035e:	3208      	adds	r2, #8
 8000360:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	7a5b      	ldrb	r3, [r3, #9]
 8000368:	4619      	mov	r1, r3
 800036a:	4b0d      	ldr	r3, [pc, #52]	; (80003a0 <GPIO_Init+0x19c>)
 800036c:	781b      	ldrb	r3, [r3, #0]
 800036e:	009b      	lsls	r3, r3, #2
 8000370:	fa01 f303 	lsl.w	r3, r1, r3
 8000374:	461c      	mov	r4, r3
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	4908      	ldr	r1, [pc, #32]	; (800039c <GPIO_Init+0x198>)
 800037c:	7809      	ldrb	r1, [r1, #0]
 800037e:	4608      	mov	r0, r1
 8000380:	ea42 0104 	orr.w	r1, r2, r4
 8000384:	f100 0208 	add.w	r2, r0, #8
 8000388:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800038c:	bf00      	nop
 800038e:	3708      	adds	r7, #8
 8000390:	46bd      	mov	sp, r7
 8000392:	bc90      	pop	{r4, r7}
 8000394:	4770      	bx	lr
 8000396:	bf00      	nop
 8000398:	2000001c 	.word	0x2000001c
 800039c:	20000020 	.word	0x20000020
 80003a0:	20000021 	.word	0x20000021

080003a4 <GPIO_ClockControl>:
 *     \post
 *
 *     \warning
 *//*------------------------------------------------------------------------*/
void GPIO_ClockControl(GPIO_RegDef_t *pGPIOx,uint8_t Control)
{
 80003a4:	b480      	push	{r7}
 80003a6:	b083      	sub	sp, #12
 80003a8:	af00      	add	r7, sp, #0
 80003aa:	6078      	str	r0, [r7, #4]
 80003ac:	460b      	mov	r3, r1
 80003ae:	70fb      	strb	r3, [r7, #3]
	if(ENABLE == Control)
 80003b0:	78fb      	ldrb	r3, [r7, #3]
 80003b2:	2b01      	cmp	r3, #1
 80003b4:	d157      	bne.n	8000466 <GPIO_ClockControl+0xc2>
	{
		/* Enable Requested */
		if(GPIOA == pGPIOx)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a59      	ldr	r2, [pc, #356]	; (8000520 <GPIO_ClockControl+0x17c>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <GPIO_ClockControl+0x28>
			GPIOA_CLK_EN();
 80003be:	4b59      	ldr	r3, [pc, #356]	; (8000524 <GPIO_ClockControl+0x180>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c2:	4a58      	ldr	r2, [pc, #352]	; (8000524 <GPIO_ClockControl+0x180>)
 80003c4:	f043 0301 	orr.w	r3, r3, #1
 80003c8:	6313      	str	r3, [r2, #48]	; 0x30
		else if(GPIOH == pGPIOx)
			GPIOH_CLK_DI();
		else
		{ /* Error Handling */}
	}
}
 80003ca:	e0a3      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOB == pGPIOx)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a56      	ldr	r2, [pc, #344]	; (8000528 <GPIO_ClockControl+0x184>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_ClockControl+0x3e>
			GPIOB_CLK_EN();
 80003d4:	4b53      	ldr	r3, [pc, #332]	; (8000524 <GPIO_ClockControl+0x180>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a52      	ldr	r2, [pc, #328]	; (8000524 <GPIO_ClockControl+0x180>)
 80003da:	f043 0302 	orr.w	r3, r3, #2
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e0:	e098      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOC == pGPIOx)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a51      	ldr	r2, [pc, #324]	; (800052c <GPIO_ClockControl+0x188>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_ClockControl+0x54>
			GPIOC_CLK_EN();
 80003ea:	4b4e      	ldr	r3, [pc, #312]	; (8000524 <GPIO_ClockControl+0x180>)
 80003ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ee:	4a4d      	ldr	r2, [pc, #308]	; (8000524 <GPIO_ClockControl+0x180>)
 80003f0:	f043 0304 	orr.w	r3, r3, #4
 80003f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f6:	e08d      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOD == pGPIOx)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a4d      	ldr	r2, [pc, #308]	; (8000530 <GPIO_ClockControl+0x18c>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_ClockControl+0x6a>
			GPIOD_CLK_EN();
 8000400:	4b48      	ldr	r3, [pc, #288]	; (8000524 <GPIO_ClockControl+0x180>)
 8000402:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000404:	4a47      	ldr	r2, [pc, #284]	; (8000524 <GPIO_ClockControl+0x180>)
 8000406:	f043 0308 	orr.w	r3, r3, #8
 800040a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040c:	e082      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOE == pGPIOx)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a48      	ldr	r2, [pc, #288]	; (8000534 <GPIO_ClockControl+0x190>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_ClockControl+0x80>
			GPIOE_CLK_EN();
 8000416:	4b43      	ldr	r3, [pc, #268]	; (8000524 <GPIO_ClockControl+0x180>)
 8000418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041a:	4a42      	ldr	r2, [pc, #264]	; (8000524 <GPIO_ClockControl+0x180>)
 800041c:	f043 0310 	orr.w	r3, r3, #16
 8000420:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000422:	e077      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOF == pGPIOx)
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a44      	ldr	r2, [pc, #272]	; (8000538 <GPIO_ClockControl+0x194>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <GPIO_ClockControl+0x96>
			GPIOF_CLK_EN();
 800042c:	4b3d      	ldr	r3, [pc, #244]	; (8000524 <GPIO_ClockControl+0x180>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000430:	4a3c      	ldr	r2, [pc, #240]	; (8000524 <GPIO_ClockControl+0x180>)
 8000432:	f043 0320 	orr.w	r3, r3, #32
 8000436:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000438:	e06c      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOG == pGPIOx)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a3f      	ldr	r2, [pc, #252]	; (800053c <GPIO_ClockControl+0x198>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <GPIO_ClockControl+0xac>
			GPIOG_CLK_EN();
 8000442:	4b38      	ldr	r3, [pc, #224]	; (8000524 <GPIO_ClockControl+0x180>)
 8000444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000446:	4a37      	ldr	r2, [pc, #220]	; (8000524 <GPIO_ClockControl+0x180>)
 8000448:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800044c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044e:	e061      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOH == pGPIOx)
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a3b      	ldr	r2, [pc, #236]	; (8000540 <GPIO_ClockControl+0x19c>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d15d      	bne.n	8000514 <GPIO_ClockControl+0x170>
			GPIOH_CLK_EN();
 8000458:	4b32      	ldr	r3, [pc, #200]	; (8000524 <GPIO_ClockControl+0x180>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045c:	4a31      	ldr	r2, [pc, #196]	; (8000524 <GPIO_ClockControl+0x180>)
 800045e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000462:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000464:	e056      	b.n	8000514 <GPIO_ClockControl+0x170>
		if(GPIOA == pGPIOx)
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4a2d      	ldr	r2, [pc, #180]	; (8000520 <GPIO_ClockControl+0x17c>)
 800046a:	4293      	cmp	r3, r2
 800046c:	d106      	bne.n	800047c <GPIO_ClockControl+0xd8>
			GPIOA_CLK_DI();
 800046e:	4b2d      	ldr	r3, [pc, #180]	; (8000524 <GPIO_ClockControl+0x180>)
 8000470:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000472:	4a2c      	ldr	r2, [pc, #176]	; (8000524 <GPIO_ClockControl+0x180>)
 8000474:	f023 0301 	bic.w	r3, r3, #1
 8000478:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047a:	e04b      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOB == pGPIOx)
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	4a2a      	ldr	r2, [pc, #168]	; (8000528 <GPIO_ClockControl+0x184>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d106      	bne.n	8000492 <GPIO_ClockControl+0xee>
			GPIOB_CLK_DI();
 8000484:	4b27      	ldr	r3, [pc, #156]	; (8000524 <GPIO_ClockControl+0x180>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000488:	4a26      	ldr	r2, [pc, #152]	; (8000524 <GPIO_ClockControl+0x180>)
 800048a:	f023 0302 	bic.w	r3, r3, #2
 800048e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000490:	e040      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOC == pGPIOx)
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	4a25      	ldr	r2, [pc, #148]	; (800052c <GPIO_ClockControl+0x188>)
 8000496:	4293      	cmp	r3, r2
 8000498:	d106      	bne.n	80004a8 <GPIO_ClockControl+0x104>
			GPIOC_CLK_DI();
 800049a:	4b22      	ldr	r3, [pc, #136]	; (8000524 <GPIO_ClockControl+0x180>)
 800049c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800049e:	4a21      	ldr	r2, [pc, #132]	; (8000524 <GPIO_ClockControl+0x180>)
 80004a0:	f023 0304 	bic.w	r3, r3, #4
 80004a4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004a6:	e035      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOD == pGPIOx)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	4a21      	ldr	r2, [pc, #132]	; (8000530 <GPIO_ClockControl+0x18c>)
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d106      	bne.n	80004be <GPIO_ClockControl+0x11a>
			GPIOD_CLK_DI();
 80004b0:	4b1c      	ldr	r3, [pc, #112]	; (8000524 <GPIO_ClockControl+0x180>)
 80004b2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004b4:	4a1b      	ldr	r2, [pc, #108]	; (8000524 <GPIO_ClockControl+0x180>)
 80004b6:	f023 0308 	bic.w	r3, r3, #8
 80004ba:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004bc:	e02a      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOE == pGPIOx)
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	4a1c      	ldr	r2, [pc, #112]	; (8000534 <GPIO_ClockControl+0x190>)
 80004c2:	4293      	cmp	r3, r2
 80004c4:	d106      	bne.n	80004d4 <GPIO_ClockControl+0x130>
			GPIOE_CLK_DI();
 80004c6:	4b17      	ldr	r3, [pc, #92]	; (8000524 <GPIO_ClockControl+0x180>)
 80004c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ca:	4a16      	ldr	r2, [pc, #88]	; (8000524 <GPIO_ClockControl+0x180>)
 80004cc:	f023 0310 	bic.w	r3, r3, #16
 80004d0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004d2:	e01f      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOF == pGPIOx)
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	4a18      	ldr	r2, [pc, #96]	; (8000538 <GPIO_ClockControl+0x194>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d106      	bne.n	80004ea <GPIO_ClockControl+0x146>
			GPIOF_CLK_DI();
 80004dc:	4b11      	ldr	r3, [pc, #68]	; (8000524 <GPIO_ClockControl+0x180>)
 80004de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004e0:	4a10      	ldr	r2, [pc, #64]	; (8000524 <GPIO_ClockControl+0x180>)
 80004e2:	f023 0320 	bic.w	r3, r3, #32
 80004e6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004e8:	e014      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOG == pGPIOx)
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4a13      	ldr	r2, [pc, #76]	; (800053c <GPIO_ClockControl+0x198>)
 80004ee:	4293      	cmp	r3, r2
 80004f0:	d106      	bne.n	8000500 <GPIO_ClockControl+0x15c>
			GPIOG_CLK_DI();
 80004f2:	4b0c      	ldr	r3, [pc, #48]	; (8000524 <GPIO_ClockControl+0x180>)
 80004f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004f6:	4a0b      	ldr	r2, [pc, #44]	; (8000524 <GPIO_ClockControl+0x180>)
 80004f8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80004fc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004fe:	e009      	b.n	8000514 <GPIO_ClockControl+0x170>
		else if(GPIOH == pGPIOx)
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	4a0f      	ldr	r2, [pc, #60]	; (8000540 <GPIO_ClockControl+0x19c>)
 8000504:	4293      	cmp	r3, r2
 8000506:	d105      	bne.n	8000514 <GPIO_ClockControl+0x170>
			GPIOH_CLK_DI();
 8000508:	4b06      	ldr	r3, [pc, #24]	; (8000524 <GPIO_ClockControl+0x180>)
 800050a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800050c:	4a05      	ldr	r2, [pc, #20]	; (8000524 <GPIO_ClockControl+0x180>)
 800050e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000512:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000514:	bf00      	nop
 8000516:	370c      	adds	r7, #12
 8000518:	46bd      	mov	sp, r7
 800051a:	bc80      	pop	{r7}
 800051c:	4770      	bx	lr
 800051e:	bf00      	nop
 8000520:	40020000 	.word	0x40020000
 8000524:	40023800 	.word	0x40023800
 8000528:	40020400 	.word	0x40020400
 800052c:	40020800 	.word	0x40020800
 8000530:	40020c00 	.word	0x40020c00
 8000534:	40021000 	.word	0x40021000
 8000538:	40021400 	.word	0x40021400
 800053c:	40021800 	.word	0x40021800
 8000540:	40021c00 	.word	0x40021c00

08000544 <GPIO_TogglePin>:
 *     \post
 *
 *     \warning
 *//*------------------------------------------------------------------------*/
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx,uint8_t PinNumber)
{
 8000544:	b480      	push	{r7}
 8000546:	b083      	sub	sp, #12
 8000548:	af00      	add	r7, sp, #0
 800054a:	6078      	str	r0, [r7, #4]
 800054c:	460b      	mov	r3, r1
 800054e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (GPIO_PIN_SET << PinNumber);
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	695b      	ldr	r3, [r3, #20]
 8000554:	78fa      	ldrb	r2, [r7, #3]
 8000556:	2101      	movs	r1, #1
 8000558:	fa01 f202 	lsl.w	r2, r1, r2
 800055c:	405a      	eors	r2, r3
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	615a      	str	r2, [r3, #20]
}
 8000562:	bf00      	nop
 8000564:	370c      	adds	r7, #12
 8000566:	46bd      	mov	sp, r7
 8000568:	bc80      	pop	{r7}
 800056a:	4770      	bx	lr

0800056c <delay>:

/*=============================================================================
=======                  PRIVATE FUNCTION DECLARATIONS                  =======
=============================================================================*/
void delay(uint32_t Value)
{
 800056c:	b480      	push	{r7}
 800056e:	b085      	sub	sp, #20
 8000570:	af00      	add	r7, sp, #0
 8000572:	6078      	str	r0, [r7, #4]
	Value*=20;
 8000574:	687a      	ldr	r2, [r7, #4]
 8000576:	4613      	mov	r3, r2
 8000578:	009b      	lsls	r3, r3, #2
 800057a:	4413      	add	r3, r2
 800057c:	009b      	lsls	r3, r3, #2
 800057e:	607b      	str	r3, [r7, #4]
	for(uint32_t i = 0 ; i<= Value; i++);
 8000580:	2300      	movs	r3, #0
 8000582:	60fb      	str	r3, [r7, #12]
 8000584:	e002      	b.n	800058c <delay+0x20>
 8000586:	68fb      	ldr	r3, [r7, #12]
 8000588:	3301      	adds	r3, #1
 800058a:	60fb      	str	r3, [r7, #12]
 800058c:	68fa      	ldr	r2, [r7, #12]
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	429a      	cmp	r2, r3
 8000592:	d9f8      	bls.n	8000586 <delay+0x1a>
}
 8000594:	bf00      	nop
 8000596:	bf00      	nop
 8000598:	3714      	adds	r7, #20
 800059a:	46bd      	mov	sp, r7
 800059c:	bc80      	pop	{r7}
 800059e:	4770      	bx	lr

080005a0 <LedToggle_GpioInit>:
/*=============================================================================
=======                              METHODS                            =======
=============================================================================*/

void LedToggle_GpioInit(void)
{
 80005a0:	b580      	push	{r7, lr}
 80005a2:	b084      	sub	sp, #16
 80005a4:	af00      	add	r7, sp, #0
	/* Configure the GPIO corresponding to the ON-Board LED */
    GPIO_Handle_t GpioLed;
    memset(&GpioLed,0,sizeof(GpioLed));
 80005a6:	1d3b      	adds	r3, r7, #4
 80005a8:	220c      	movs	r2, #12
 80005aa:	2100      	movs	r1, #0
 80005ac:	4618      	mov	r0, r3
 80005ae:	f000 f873 	bl	8000698 <memset>
    /* Configure the LED by populating the structure */
    GpioLed.pGPIOx = GPIOA;
 80005b2:	4b0e      	ldr	r3, [pc, #56]	; (80005ec <LedToggle_GpioInit+0x4c>)
 80005b4:	607b      	str	r3, [r7, #4]
    GpioLed.GPIO_PinConfig.GPIO_PinMode       = GPIO_MODE_OUT;
 80005b6:	2301      	movs	r3, #1
 80005b8:	727b      	strb	r3, [r7, #9]
    GpioLed.GPIO_PinConfig.GPIO_PinNumber     = GPIO_PIN_5;
 80005ba:	2305      	movs	r3, #5
 80005bc:	723b      	strb	r3, [r7, #8]
    GpioLed.GPIO_PinConfig.GPIO_PinOPType     = GPIO_OT_PP;
 80005be:	2300      	movs	r3, #0
 80005c0:	733b      	strb	r3, [r7, #12]
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed      = GPIO_MEDIUM_SPEED;
 80005c2:	2301      	movs	r3, #1
 80005c4:	72bb      	strb	r3, [r7, #10]
    GpioLed.GPIO_PinConfig.PIO_PinPUPDControl = GPIO_NO_PUPD;
 80005c6:	2300      	movs	r3, #0
 80005c8:	72fb      	strb	r3, [r7, #11]

    GPIO_ClockControl(GPIOA,ENABLE);
 80005ca:	2101      	movs	r1, #1
 80005cc:	4807      	ldr	r0, [pc, #28]	; (80005ec <LedToggle_GpioInit+0x4c>)
 80005ce:	f7ff fee9 	bl	80003a4 <GPIO_ClockControl>
    GPIO_Init(&GpioLed);
 80005d2:	1d3b      	adds	r3, r7, #4
 80005d4:	4618      	mov	r0, r3
 80005d6:	f7ff fe15 	bl	8000204 <GPIO_Init>

    while(1)
    {
    	GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 80005da:	2105      	movs	r1, #5
 80005dc:	4803      	ldr	r0, [pc, #12]	; (80005ec <LedToggle_GpioInit+0x4c>)
 80005de:	f7ff ffb1 	bl	8000544 <GPIO_TogglePin>
    	delay(50000);
 80005e2:	f24c 3050 	movw	r0, #50000	; 0xc350
 80005e6:	f7ff ffc1 	bl	800056c <delay>
    	GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 80005ea:	e7f6      	b.n	80005da <LedToggle_GpioInit+0x3a>
 80005ec:	40020000 	.word	0x40020000

080005f0 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80005f0:	b580      	push	{r7, lr}
 80005f2:	af00      	add	r7, sp, #0
	LedToggle_GpioInit();
 80005f4:	f7ff ffd4 	bl	80005a0 <LedToggle_GpioInit>
    /* Loop forever */
	for(;;);
 80005f8:	e7fe      	b.n	80005f8 <main+0x8>
	...

080005fc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005fc:	480d      	ldr	r0, [pc, #52]	; (8000634 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005fe:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000600:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000604:	480c      	ldr	r0, [pc, #48]	; (8000638 <LoopForever+0x6>)
  ldr r1, =_edata
 8000606:	490d      	ldr	r1, [pc, #52]	; (800063c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000608:	4a0d      	ldr	r2, [pc, #52]	; (8000640 <LoopForever+0xe>)
  movs r3, #0
 800060a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800060c:	e002      	b.n	8000614 <LoopCopyDataInit>

0800060e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800060e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000610:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000612:	3304      	adds	r3, #4

08000614 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000614:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000616:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000618:	d3f9      	bcc.n	800060e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800061a:	4a0a      	ldr	r2, [pc, #40]	; (8000644 <LoopForever+0x12>)
  ldr r4, =_ebss
 800061c:	4c0a      	ldr	r4, [pc, #40]	; (8000648 <LoopForever+0x16>)
  movs r3, #0
 800061e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000620:	e001      	b.n	8000626 <LoopFillZerobss>

08000622 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000622:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000624:	3204      	adds	r2, #4

08000626 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000626:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000628:	d3fb      	bcc.n	8000622 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800062a:	f000 f811 	bl	8000650 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800062e:	f7ff ffdf 	bl	80005f0 <main>

08000632 <LoopForever>:

LoopForever:
    b LoopForever
 8000632:	e7fe      	b.n	8000632 <LoopForever>
  ldr   r0, =_estack
 8000634:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000638:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800063c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000640:	080006c8 	.word	0x080006c8
  ldr r2, =_sbss
 8000644:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000648:	20000024 	.word	0x20000024

0800064c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800064c:	e7fe      	b.n	800064c <ADC_IRQHandler>
	...

08000650 <__libc_init_array>:
 8000650:	b570      	push	{r4, r5, r6, lr}
 8000652:	4d0d      	ldr	r5, [pc, #52]	; (8000688 <__libc_init_array+0x38>)
 8000654:	4c0d      	ldr	r4, [pc, #52]	; (800068c <__libc_init_array+0x3c>)
 8000656:	1b64      	subs	r4, r4, r5
 8000658:	10a4      	asrs	r4, r4, #2
 800065a:	2600      	movs	r6, #0
 800065c:	42a6      	cmp	r6, r4
 800065e:	d109      	bne.n	8000674 <__libc_init_array+0x24>
 8000660:	4d0b      	ldr	r5, [pc, #44]	; (8000690 <__libc_init_array+0x40>)
 8000662:	4c0c      	ldr	r4, [pc, #48]	; (8000694 <__libc_init_array+0x44>)
 8000664:	f000 f820 	bl	80006a8 <_init>
 8000668:	1b64      	subs	r4, r4, r5
 800066a:	10a4      	asrs	r4, r4, #2
 800066c:	2600      	movs	r6, #0
 800066e:	42a6      	cmp	r6, r4
 8000670:	d105      	bne.n	800067e <__libc_init_array+0x2e>
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f855 3b04 	ldr.w	r3, [r5], #4
 8000678:	4798      	blx	r3
 800067a:	3601      	adds	r6, #1
 800067c:	e7ee      	b.n	800065c <__libc_init_array+0xc>
 800067e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000682:	4798      	blx	r3
 8000684:	3601      	adds	r6, #1
 8000686:	e7f2      	b.n	800066e <__libc_init_array+0x1e>
 8000688:	080006c0 	.word	0x080006c0
 800068c:	080006c0 	.word	0x080006c0
 8000690:	080006c0 	.word	0x080006c0
 8000694:	080006c4 	.word	0x080006c4

08000698 <memset>:
 8000698:	4402      	add	r2, r0
 800069a:	4603      	mov	r3, r0
 800069c:	4293      	cmp	r3, r2
 800069e:	d100      	bne.n	80006a2 <memset+0xa>
 80006a0:	4770      	bx	lr
 80006a2:	f803 1b01 	strb.w	r1, [r3], #1
 80006a6:	e7f9      	b.n	800069c <memset+0x4>

080006a8 <_init>:
 80006a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006aa:	bf00      	nop
 80006ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ae:	bc08      	pop	{r3}
 80006b0:	469e      	mov	lr, r3
 80006b2:	4770      	bx	lr

080006b4 <_fini>:
 80006b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006b6:	bf00      	nop
 80006b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ba:	bc08      	pop	{r3}
 80006bc:	469e      	mov	lr, r3
 80006be:	4770      	bx	lr
