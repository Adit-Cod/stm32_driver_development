/******************************************************************************
*****                    STM MAIN SPI HEADER FILE                       *****
******************************************************************************/
/*!
***     \file       Stm32f44xx_SPI.h
***
***     \author     Aditya Subramanian
***
***
***     \brief      This module is intended to provide key SPI specific details.
***     \par        File_description
***
***
***
*\n*/
/*****************************************************************************/

/*=============================================================================
=======                            INCLUDES                             =======
=============================================================================*/
#ifndef INC_STM32F44XX_SPI_H_
#define INC_STM32F44XX_SPI_H_

/*------ standard includes -------*/
#include<stdint.h>
/*------ project includes --------*/

/*------ module includes ---------*/
#include "stm32f446xx.h"

/*=============================================================================
=======               DEFINES & MACROS FOR GENERAL PURPOSE              =======
=============================================================================*/

/* SPI Peripheral Clock Enable Macro */

#define SPI1_CLK_EN()    (RCC->APB2ENR |= (1<<12))
#define SPI2_CLK_EN()    (RCC->APB1ENR |= (1<<14))
#define SPI3_CLK_EN()    (RCC->APB1ENR |= (1<<15))
#define SPI4_CLK_EN()    (RCC->APB2ENR |= (1<<13))

/* SPI Peripheral Clock Disable Macro */

#define SPI1_CLK_DI()    (RCC->APB2ENR &= ~(1<<12))
#define SPI2_CLK_DI()    (RCC->APB1ENR &= ~(1<<14))
#define SPI3_CLK_DI()    (RCC->APB1ENR &= ~(1<<15))
#define SPI4_CLK_DI()    (RCC->APB2ENR &= ~(1<<13))

/* SPI Base Address Mapping           */
#define SPI1             ((SPI_RegDef_t*)SPI1_BASEADDR)
#define SPI2             ((SPI_RegDef_t*)SPI2_BASEADDR)
#define SPI3             ((SPI_RegDef_t*)SPI3_BASEADDR)
#define SPI4             ((SPI_RegDef_t*)SPI4_BASEADDR)
/*=============================================================================
=======                       CONSTANTS  &  TYPES                       =======
=============================================================================*/

/* SPI Configuration Structure Definition */

typedef struct
{
   /* SPI Device Mode                     */
   uint8_t SPI_DeviceMode;
   /* SPI Bus Config                      */
   uint8_t SPI_BusConfig;
   /* SPI Clock Speed                     */
   uint8_t SPI_SclkSpeed;
   /* SPI DFF Configuration               */
   uint8_t SPI_DFF;
   /* CPOL Configuration                  */
   uint8_t SPI_CPOL;
   /* CPHA Configuration                  */
   uint8_t SPI_CPHA;
   /* SSM Configuration                   */
   uint8_t SPI_SSM;
}SPI_Config_t;

/* SPI Handle Structure */

typedef struct
{
	/* Pointer to Base Address of SPI Peripheral */
	SPI_RegDef_t  *pSPIx;
	/* Configuration Handle of SPI Peripheral    */
	SPI_Config_t  SPIConfig;
}SPI_Handle_t;

/*=============================================================================
=======                       PUBLIC FUNCTION DECLARATIONS              =======
=============================================================================*/

void SPI_ClockControl(SPI_RegDef_t *pSPIx,uint8_t Control);
void SPI_Init(SPI_Handle_t *pSPIx);
void SPI_DeInit(SPI_RegDef_t *pSPIx);

void SPI_Send(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer, uin32_t Len);
void SPI_ReceiveData(uint8_t *pRxBuffer, uin32_t Len);

/* IRQ and ISR Handling */


#endif /* INC_STM32F44XX_SPI_H_ */
