/******************************************************************************
*****                    STM MAIN HEADER FILE                             *****
******************************************************************************/
/*!
***     \file       stm32f446xx.h
***
***     \author     Aditya Subramanian
***
***
***     \brief      This module is intended to provide key microcontroller specific details.
***     \par        File_description
***
***
***
*\n*/
/*****************************************************************************/

/*=============================================================================
=======                            INCLUDES                             =======
=============================================================================*/
#ifndef STM32F446XX_H_
#define STM32F446XX_H_

/*------ standard includes -------*/
#include<stdint.h>
/*------ project includes --------*/

/*------ module includes ---------*/

/*=============================================================================
=======               DEFINES & MACROS FOR GENERAL PURPOSE              =======
=============================================================================*/
/* Flash Base Address */
#define FLASH_BASEADDR            0x08000000U
#define SRAM1_BASEADDR            0x20000000U
#define SRAM2_BASEADDR            0x2001C000U
#define ROM_BASEADDR              0x1FFF0000U
#define SRAM                      SRAM1_BASEADDR

/* Base Address of Busses */
#define PERIPH_BASEADDR           0x40000000U
#define AHB1_BASEADDR             0x40020000U
#define AHB2_BASEADDR             0x50000000U
#define APB1_BASEADDR             0x40000000U
#define APB2_BASEADDR             0x40010000U

/* Peripheral Base Address */

/* GPIO Base Addresses */
#define GPIOA_BASEADDR             AHB1_BASEADDR
#define GPIOB_BASEADDR            (AHB1_BASEADDR + 0x0400U)
#define GPIOC_BASEADDR            (AHB1_BASEADDR + 0x0800U)
#define GPIOD_BASEADDR            (AHB1_BASEADDR + 0x0C00U)
#define GPIOE_BASEADDR            (AHB1_BASEADDR + 0x1000U)
#define GPIOF_BASEADDR            (AHB1_BASEADDR + 0x1400U)
#define GPIOG_BASEADDR            (AHB1_BASEADDR + 0x1800U)
#define GPIOH_BASEADDR            (AHB1_BASEADDR + 0x1C00U)

/* SPI Base Address */
#define SPI1_BASEADDR             (APB2_BASEADDR + 0x3000U)
#define SPI2_BASEADDR             (APB1_BASEADDR + 0x3800U)
#define SPI3_BASEADDR             (APB1_BASEADDR + 0x3C00U)
#define SPI4_BASEADDR             (APB2_BASEADDR + 0x3400U)

/* I2C Base Address */
#define I2C1_BASEADDR             (APB1_BASEADDR + 0x5400U)
#define I2C2_BASEADDR             (APB1_BASEADDR + 0x5800U)
#define I2C3_BASEADDR             (APB1_BASEADDR + 0x5C00U)

/* USART Base Address */
#define USART1_BASEADDR            (APB2_BASEADDR + 0x1000U)
#define USART2_BASEADDR            (APB1_BASEADDR + 0x4400U)
#define USART3_BASEADDR            (APB1_BASEADDR + 0x4800U)
#define UART4_BASEADDR             (APB1_BASEADDR + 0x4C00U)
#define UART5_BASEADDR             (APB1_BASEADDR + 0x5000U)
#define USART6_BASEADDR            (APB2_BASEADDR + 0x1400U)

/* CAN Base Address */
#define CAN1_BASEADDR              (APB1_BASEADDR + 0x6400U)
#define CAN2_BASEADDR              (APB2_BASEADDR + 0x6800U)

/* EXTI Base Address */
#define EXTI_BASEADDR              (APB2_BASEADDR + 0x3C00U)
#define EXTI                        EXTI_BASEADDR
/* SYSCFG Base Address */
#define SYSCFG_BASEADDR             (APB2_BASEADDR + 0x3800U)

/* RCC Engine Base Address */
#define RCC_BASEADDR                (AHB1_BASEADDR + 0x3800U)
#define RCC                          RCC_BASEADDR

/* Common Macros */
#define __VO                         volatile
#define __ui32                       uint32_t
/*=============================================================================
=======                       CONSTANTS  &  TYPES                       =======
=============================================================================*/

/* Peripheral Structure Definitions */

/* GPIO structure definition */

typedef struct
{
	/* Port ModeR Register               */
	__VO uint32_t MODER;
    /* Port Output Type Register         */
	__VO uint32_t OTYPER;
    /* Port output Speed Register        */
	__VO uint32_t OSPEEDER;
    /* Port Pull-Up Pull-Down Register   */
	__VO uint32_t PUPDR;
    /* Port Input Data Register          */
	__VO uint32_t IDR;
    /* Port Output Data Register         */
	__VO uint32_t ODR;
    /* Port Bit Set/Reset Register       */
	__VO uint32_t BSRR;
    /* Configuration Lock Register       */
	__VO uint32_t LCKR;
    /* Alternate Function Register Low   */
	__VO uint32_t AFRL;
    /* Alternate Function Register High  */
	__VO uint32_t AFRH;

}GPIO_RegDef_t;

/* RCC structure Definition */

typedef struct
{
	__VO __ui32 CR;
	__VO __ui32 PLL_CFGR;
	__VO __ui32 CFGR;
	__VO __ui32 CIR;
	__VO __ui32 AHB1_RSTR;
	__VO __ui32 AHB2_RSTR;
	__VO __ui32 AHB3_RSTR;
	__VO __ui32 Reserved1;
	__VO __ui32 APB1_RSTR;
	__VO __ui32 APB2_RSTR;
	__VO __ui32 Reserved2;
	__VO __ui32 Reserved3;
	__VO __ui32 AHB1ENR;
	__VO __ui32 AHB2ENR;
	__VO __ui32 AHB3ENR;
	__VO __ui32 Reserved4;
	__VO __ui32 APB1ENR;
	__VO __ui32 APB2ENR;
	__VO __ui32 Reserved5;
	__VO __ui32 Reserved6;
	__VO __ui32 AHB1_LPENR;
	__VO __ui32 AHB2_LPENR;
	__VO __ui32 AHB3_LPENR;
	__VO __ui32 Reserved7;
	__VO __ui32 APB1_LPENR;
	__VO __ui32 APB2_LPENR;
	__VO __ui32 Reserved8;
	__VO __ui32 Reserved9;

}RCC_RegDef_t;

#endif /* STM32F446XX_H_ */
