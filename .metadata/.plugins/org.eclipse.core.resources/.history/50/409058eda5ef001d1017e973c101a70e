/******************************************************************************
*****                       LED TOGGLE  MAIN                              *****
******************************************************************************/
/*!
***     \file       Led_Toggle.c
***
***     \author     Aditya Subramanian
***                 Email.. aditya.subramanian3005@gmail.com
***
***     \brief      This module is intended to act as the main file for the stm32
***     			on board Toggle Application
***     \par        File_description
***                 Main file of the Stm32 Driver
***
***
*\n*/
/*****************************************************************************/

/*=============================================================================
=======                            INCLUDES                             =======
=============================================================================*/

/*------ standard includes -------*/
#include <string.h>
/*------ project includes --------*/
#include "Stm32f44xx_gpio.h"
#include "stm32f446xx.h"
/*------ module includes --------*/
#include "Led_Toggle.h"

/*=============================================================================
=======               DEFINES & MACROS FOR GENERAL PURPOSE              =======
=============================================================================*/

/*=============================================================================
=======                       CONSTANTS  &  TYPES                       =======
=============================================================================*/

/*=============================================================================
=======                  PRIVATE FUNCTION DECLARATIONS                  =======
=============================================================================*/
void delay(uint32_t Value)
{
	Value*=20;
	for(uint32_t i = 0 ; i<= Value; i++);
}
/*=============================================================================
=======                              METHODS                            =======
=============================================================================*/

void LedToggle_GpioInit(void)
{
	/* Configure the GPIO corresponding to the ON-Board LED */
    GPIO_Handle_t GpioLed;
    /* Clean Up Structure before population. Sanitary check */
    memset(&GpioLed,0,sizeof(GpioLed));

    /* Configure the LED by populating the structure */
    GpioLed.pGPIOx = GPIOA;
    GpioLed.GPIO_PinConfig.GPIO_PinMode       = GPIO_MODE_OUT;
    GpioLed.GPIO_PinConfig.GPIO_PinNumber     = GPIO_PIN_5;
    GpioLed.GPIO_PinConfig.GPIO_PinOPType     = GPIO_OT_PP;
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed      = GPIO_MEDIUM_SPEED;
    GpioLed.GPIO_PinConfig.PIO_PinPUPDControl = GPIO_NO_PUPD;

    GPIO_ClockControl(GPIOA,ENABLE);
    GPIO_Init(&GpioLed);

    while(1)
    {
    	if(GPIO_ReadPin(GPIOC, GPIO_PIN_13) == USER_BUTTON_PRESSED)
    	{
    		GPIO_TogglePin(GPIOA, GPIO_PIN_5);
    	}
    	delay(50000);
    }
}

void LedToggle_ButtonInit(void)
{
	/* Button is at PC13 In Nucleo Board!: As per schematics. */
    GPIO_Handle_t GpioButton;
    /* Clean Up Structure before population. Sanitary check */
    memset(&GpioButton,0,sizeof(GpioButton));

    /* Configure the LED by populating the structure */
    GpioLed.pGPIOx = GPIOC;
    GpioLed.GPIO_PinConfig.GPIO_PinMode       = GPIO_MODE_IN;
    GpioLed.GPIO_PinConfig.GPIO_PinNumber     = GPIO_PIN_13;
    GpioLed.GPIO_PinConfig.GPIO_PinSpeed      = GPIO_MEDIUM_SPEED;
    GpioLed.GPIO_PinConfig.PIO_PinPUPDControl = GPIO_NO_PUPD;

    GPIO_ClockControl(GPIOC,ENABLE);
    GPIO_Init(&GpioButton);
}
