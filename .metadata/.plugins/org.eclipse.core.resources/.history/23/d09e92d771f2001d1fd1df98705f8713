/******************************************************************************
*****                       LED INTERRUPT HANDLE MAIN                     *****
******************************************************************************/
/*!
***     \file       Led_InterruptHandle.c
***
***     \author     Aditya Subramanian
***                 Email.. aditya.subramanian3005@gmail.com
***
***     \brief      This module is intended to act as the main file for the stm32
***     			on board Interrupt Application
***     \par        File_description
***                 Main file of the Stm32 Driver
***
***
*\n*/
/*****************************************************************************/

/*=============================================================================
=======                            INCLUDES                             =======
=============================================================================*/

/*------ standard includes -------*/
#include <string.h>
/*------ project includes --------*/
#include "Stm32f44xx_gpio.h"
#include "stm32f446xx.h"
/*------ module includes --------*/
#include "Led_InterruptHandle.h"

/*=============================================================================
=======               DEFINES & MACROS FOR GENERAL PURPOSE              =======
=============================================================================*/

/*=============================================================================
=======                       CONSTANTS  &  TYPES                       =======
=============================================================================*/

/*=============================================================================
=======                  PRIVATE FUNCTION DECLARATIONS                  =======
=============================================================================*/
static void delay(uint32_t Value);
/*=============================================================================
=======                              METHODS                            =======
=============================================================================*/

/*---------------------------------------------------------------------------*/
/*     FUNCTION: LedInterrupt_ButtonInit()
 */
/*!    \brief   Configure On Board Button as an Interrupt.
 *
 *
 *     \param   void
 *
 *     \returns  void
 *     \pre
 *     \post
 *
 *     \warning
 *//*------------------------------------------------------------------------*/
void LedInterrupt_ButtonInit(void)
{
	/* Button is at PC13 In Nucleo Board!: As per schematics. */
    GPIO_Handle_t GpioButton;
    /* Clean Up Structure before population. Sanitary check */
    memset(&GpioButton,0,sizeof(GpioButton));

    /* Configure the LED by populating the structure */
    GpioButton.pGPIOx = GPIOC;
    GpioButton.GPIO_PinConfig.GPIO_PinMode       = GPIO_MODE_IT_FE;
    GpioButton.GPIO_PinConfig.GPIO_PinNumber     = GPIO_PIN_13;
    GpioButton.GPIO_PinConfig.GPIO_PinSpeed      = GPIO_MEDIUM_SPEED;
    GpioButton.GPIO_PinConfig.PIO_PinPUPDControl = GPIO_NO_PUPD;
    GpioButton.GPIO_PinConfig.GPIO_PinOPType     = GPIO_OT_PP;

    /* This application uses on-board button which is at PC 13 and therefore; the EXTI line 10-15 is configured
     * This will change with change in button input. */
    GPIO_IRQPriorityConfig(EXTI15_10_IRQ_NO,NVIC_IRQ_PRIO15);
    /* Configure the EXTI and IRQ */
    GPIO_IRQConfig(EXTI15_10_IRQ_NO,ENABLE);
    /* Enable Clock Access to GPIO port c */
    GPIO_ClockControl(GPIOC,ENABLE);
    /* Populate the GPIO Buffers with the appropriate configuration done above. */
    GPIO_Init(&GpioButton);
}

/*---------------------------------------------------------------------------*/
/*     FUNCTION: delay(uint32_t value)
 */
/*!    \brief    Simulate Delay
 *
 *
 *     \param   uint32_t Value
 *
 *     \returns  void
 *     \pre
 *     \post
 *
 *     \warning
 *//*------------------------------------------------------------------------*/
static void delay(uint32_t Value)
{
	Value*=20;
	for(uint32_t i = 0 ; i<= Value; i++);
}
